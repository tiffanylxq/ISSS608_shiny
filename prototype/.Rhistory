library(shiny); runApp('ported_over_app.R')
runApp('ported_over_app.R')
runApp('ported_over_app.R')
runApp('ported_over_app.R')
runApp('ported_over_app.R')
runApp('ported_over_app.R')
where git
library(shiny); runApp('ported_over_app.R')
knitr::opts_chunk$set(echo = TRUE,
eval = TRUE,
warning = FALSE,
message = FALSE)
packages = c('tidyverse','treemap','ggrepel','lubridate','gapminder','gganimate','ggiraph','plotly','zoo', 'tmap', 'sf','trelliscopejs', 'hrbrthemes','transformr','d3treeR',
'lubridate','clock',
'sftime','rmarkdown','data.table')
for(p in packages){
if(!require(p, character.only =T)){
install.packages(p)
}
library(p, character.only =T)
}
Employers <- read_csv("data/Employers.csv")
Buildings <- read_csv("data/Buildings.csv")
Jobs <- read_csv("data/Jobs.csv")
Checkin <- read_csv("data/CheckinJournal.csv")
Participants <- read_csv("data/Participants.csv")
#standardise column's name with other data files
Checkin <- Checkin %>%
rename('employerId' = 'venueId')
#
Employers_Job <- Jobs %>%
group_by(employerId) %>%
summarise(Num_of_Jobs = n(),
minPay = round(min(hourlyRate),0),
maxPay = round(max(hourlyRate),0),
avgPay = round(mean(hourlyRate),0),
medPay = round(median(hourlyRate),0))%>%
mutate(payGroupMin = cut(minPay,
breaks = c(-Inf,15,35,Inf),
labels = c("<=$15 (Low)", "$16-35 (Mid)",">$36 (High)"),
right = FALSE),
payGroupMax = cut(maxPay,
breaks = c(-Inf,15,35,Inf),
labels = c("<=$15 (Low)", "$16-35 (Mid)",">$36 (High)"),
right = FALSE),
payGroupAvg = cut(avgPay,
breaks = c(-Inf,15,35,Inf),
labels = c("<=$15 (Low)", "$16-35 (Mid)",">$36 (High)"),
right = FALSE).
#
Employers_Job <- Jobs %>%
group_by(employerId) %>%
summarise(Num_of_Jobs = n(),
minPay = round(min(hourlyRate),0),
maxPay = round(max(hourlyRate),0),
avgPay = round(mean(hourlyRate),0),
medPay = round(median(hourlyRate),0))%>%
mutate(payGroupMin = cut(minPay,
breaks = c(-Inf,15,35,Inf),
labels = c("<=$15 (Low)", "$16-35 (Mid)",">$36 (High)"),
right = FALSE),
payGroupMax = cut(maxPay,
breaks = c(-Inf,15,35,Inf),
labels = c("<=$15 (Low)", "$16-35 (Mid)",">$36 (High)"),
right = FALSE),
payGroupAvg = cut(avgPay,
breaks = c(-Inf,15,35,Inf),
labels = c("<=$15 (Low)", "$16-35 (Mid)",">$36 (High)"),
right = FALSE),
payGroupMed = cut(medPay,
breaks = c(-Inf,15,35,Inf),
labels = c("<=$15 (Low)", "$16-35 (Mid)",">$36 (High)"),
right = FALSE))%>%
left_join(Employers)%>%
ungroup()
#Filter rows with check in (i.e. venueType) at workplace only
Workplace_Checkin <- Checkin %>%
filter(venueType == "Workplace")
#Format timestamp column
Workplace_Checkin$Date <- as.Date(Workplace_Checkin$timestamp)
#Assign Running Week Number, Weekday, Month
Workplace_Checkin <- Workplace_Checkin %>%
mutate(weekNum = as.double(ceiling(difftime(Date, strptime("01.03.2022", format = "%d.%m.%Y"),units="weeks"))),
Weekday = weekdays(Date),
yearMonth = format_ISO8601(Date, precision = "ym")) %>%
distinct(participantId,employerId, Date,Weekday,weekNum,yearMonth)
Employers <- read_csv("data/Employers.csv")
Buildings <- read_csv("data/Buildings.csv")
Jobs <- read_csv("data/Jobs.csv")
Checkin <- read_csv("data/CheckinJournal.csv")
Participants <- read_csv("data/Participants.csv")
#standardise column's name with other data files
Checkin <- Checkin %>%
rename('venueId' = 'employerId')
Employers <- read_csv("data/Employers.csv")
Buildings <- read_csv("data/Buildings.csv")
Jobs <- read_csv("data/Jobs.csv")
Checkin <- read_csv("data/CheckinJournal.csv")
Participants <- read_csv("data/Participants.csv")
#standardise column's name with other data files
Checkin <- Checkin %>%
rename('employerId' = 'venueId')
Employers <- read_csv("data/Employers.csv")
Buildings <- read_csv("data/Buildings.csv")
Jobs <- read_csv("data/Jobs.csv")
Checkin <- read_csv("data/CheckinJournal.csv")
Participants <- read_csv("data/Participants.csv")
#standardise column's name with other data files
Checkin2 <- Checkin %>%
rename('employerId' = 'venueId')
Employers <- read_csv("data/Employers.csv")
Buildings <- read_csv("data/Buildings.csv")
Jobs <- read_csv("data/Jobs.csv")
Checkin <- read_csv("data/CheckinJournal.csv")
Participants <- read_csv("data/Participants.csv")
#standardise column's name with other data files
Checkin <- Checkin %>%
rename("employerId" = "venueId")
